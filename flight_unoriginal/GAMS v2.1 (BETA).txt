import pickle
import os
import random

# ALL CLASSES.................................................................
class passenger:
    def __init__(self):
        self.id=0
        self.name=""
        self.birthday=''
        self.age=''
        self.gender=''
        self.flightclass=''
        self.trans_code=''

    def storedata(self):
        self.id=input ('Enter id: ')
        self.name=raw_input('Enter name: ')
        self.birthday=raw_input('Enter your date of birth--')
        self.age=raw_input('Enter Your age--')
        self.gender=raw_input('Enter your gender(M/F)--')
        self.flightclass=raw_input('Enter prefered flight class(F-Firstclass ,B-Bussinessclass,E-Economyclass--')
        self.transcode='code'

    def flclass(self):
            return self.flightclass
    def pname(self):
            return self.name


    def display(self):
        print '--------------------------------------------|||PASSNGER DETAILS|||-----------------------------------------'
        print 'ID\t\tNAME\t\tD.O.B.\t\tAGE\t\tGENDER\t\tFLIGHT CLASS'
        print self.id,'\t\t' , self.name,'\t\t' ,self.birthday,'\t\t' ,self.age,'\t\t' ,self.gender,'\t\t' ,self.flightclass,'\t\t' ,self.trans_code

class flight_detail: #ADMIN
    def __init__(self):
        self.flight_num=''
        self.origin_name=""
        self.dest_name=''
        self.date=''
        self.time_depart=''
        self.time_arrive=''
        self.firstclass=0
        self.fir_price=0
        self.businessclass=0
        self.bus_price=0
        self.economyclass=0
        self.eco_price=0

    def storedata(self):
        self.flight_num=raw_input('Enter FLIGHT NUMER--')
        self.origin_name=raw_input('Enter departure location--')
        self.dest_name=raw_input('Enter arrival location--')
        self.date=raw_input('Enter departure date--')
        self.firstclass=input('Enter no. of first class seats:-')
        self.fir_price=input('Enter the price for first class seat:-')
        self.businessclass=input('Enter no. of business class seats:-')
        self.bus_price=input('Enter the price for business class seat:-')
        self.economyclass=input('Enter no. of economy class seat:-')
        self.eco_price=input('Enter the price of economy class seat:-')
        print


    def timing(self):  #For providing additional times for same flight per day
        self.time_depart=raw_input('Enter the time of departure--')
        self.time_arrive=raw_input('Enter the time of arrival--')
        print


    def display(self):
        print self.flight_num,'     ',self.origin_name,'   ',self.dest_name,'   ',self.date,'   ',self.time_depart,'  ',self.time_arrive,'   ',self.firstclass,'    ',self.fir_price, '   ' ,self.businessclass,'   ',self.bus_price,'   ',self.economyclass,'   ',self.eco_price


class user_register:   #GENERAL AUTOMATIC FUNCTION
    def __init__(self):
        self.username=''
        self.password=''
    def storedata(self):
        self.username=raw_input('Enter username:-')
        self.password=raw_input('Enter password:-')
        


class user_login: #GENERAL AUTOMATIC FUNCTION

    def __init__(self):

        self.username=''
        self.password=''
    def storedata(self):
        self.username=raw_input('Enter username:-')
        self.password=raw_input('Enter password:-')
        username=self.username
        password=self.password
        user_main_menu()                             #TESTING PURPOSES
        user_check(username,password)




class admin_login: #GENERAL AUTOMATIC FUNCTION
    def __init__(self):
        self.username=''
        self.password=''
    def storedata(self):
        self.username=raw_input('Enter username:-')
        self.password=raw_input('Enter password:-')
        if self.username=='admin' and  self.password=='anand':
            print
            print
            print 'WELCOME TO G.A.M.S. V2.0 (BETA)..........................'
            print 'LOGGED IN AS ADMIN..................'
            print
            admin_main_menu()
        else:
            print
            print'ACCESS DENIED!! WRONG USERNAME/PASSWORD!!!'
            al=admin_login()
            al.storedata()
            
class code_gen():
    def __init__(self):
        self.code=''
        self.name=''
    def storedata(self,n):
        self.code=str(random.random())
        self.name=n
    def display_code(self):
        print
        print
        print 'TRANSACTION CODE (Please note it down) : -- ',self.code+self.name
        print 'PASSENGER NAME :--' ,self.name
        print


        






#/// GENERAL AUTOMATIC FUNCTIONS------------------------------------------------------------------////

def create_passenger(flnum1):
    f=open("passenger.dat","ab")

    n=input("Enter the no. of passengers(including you!):")
    p=passenger()

    for i in range(n):

        p.storedata()
        flclass=p.flclass()
        

        pickle.dump(p,f)

        fl=flight_detail()
        price_allocate_tot_amount(flnum1,flclass)

        name1=p.pname()
        code_generator_file(name1)
        
        p.display()


    f.close()



def price_allocate_tot_amount(flnum2,flclas):
    f=open("flight.dat","a+b")

    fl=flight_detail()
    status=0
    tot_amount=23

    try:
        while True:
            fl= pickle.load(f)
            if fl.flight_num==flnum2:
                status=1
                fir_price=fl.fir_price
                bus_price=fl.bus_price
                eco_price=fl.eco_price

                if flclas=='F':
                    tot_amount=tot_amount+fir_price
                elif flclas=='B':
                    tot_amount=tot_amount+bus_price
                elif flclas=='E':
                    tot_amount=tot_amount+eco_price
                else:
                    print 'YOU HAVE ENTERED THE WRONG CHARACTER FOR FLIGHT CLASS!!!PLEASE TRY AGAIN!!'
                    book_flight()



    except EOFError:
        f.close()
        #book_update(flnum2,flclas)
    print 'TOTAL AMOUNT CALCULATED=',tot_amount
    book_update(flnum2,flclas)

def code_generator_file(n):
    f=open("transactioncode.dat","wb")
    c=code_gen()
    c.storedata(n)
    pickle.dump(c,f)
    c.display_code()
    f.close()

    

def register():
       ur=user_register()   
       f=open("user.dat","a+b")
       username=raw_input("Enter username ")
       password=raw_input("Enter password ")
       status=0

       try:
          while True:
            ur= pickle.load(f)
            
            if ur.username==username:
                print '---------------------'
                print 'USERNAME HAS ALREADY BEEN TAKEN......please try again'
                ur.storedata()
            if len(password)<8:
                print 'PLEASE ENTER A PASSWORD CONTAINING MORE THAN 8 CHARACTERS!! LONGER THE PASSWORD.....GREATER THE SECURITY'
                ur.storedata()

       except EOFError:
            pickle.dump(ur,f)
            print 'USERNAME AND PASSWORD ACCEPTED!! YOU HAVE BEEN SUCCESSFULLY REGISTERED!!!'
            f.close()


def user_check(u,p):
    f1=open("user.dat","rb")
    ul=user_login()

    try:
        while True:
            ul=pickle.load(f1)
            if ul.username==u and ul.password==p :
                print 'LOGIN SUCCESSFUL!!'
                user_main_menu()
            else:
                print 'Wrong combination of username/password!! Please try again!!!!'
                ul.storedata()

    except EOFError:
        f1.close()


def book_update(flnum3,flclas1):

    f1=open("flight.dat","rb")
    f2=open("new_flight.dat","ab")
    fl=flight_detail()
    status=0

    try:
        while True:
            fl= pickle.load(f1)
            if fl.flight_num==flnum3:
                status=1
                if flclas1=='F':
                    fl.firstclass=fl.firstclass-1
                if flclas1=='B':
                    fl.businessclass=fl.businessclass-1
                if flclas1=='E':
                    fl.economyclass=fl.economyclass-1

            pickle.dump(fl,f2)
    except EOFError:
        f1.close()
        f2.close()

    os.remove("flight.dat")
    os.rename("new_flight.dat","flight.dat")




#FUNCTIONS EEND...........................................................

#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

#ADMIN CONTROLLED FUNCTIONS///-------------------------------------------------///
def create_flight():
    f=open("flight.dat","wb")

    n=input("Enter the no. of flight plans:-")
    fl=flight_detail()
    for i in range(n):
        fl.storedata()
        t=input('Enter no. flight times for this day--')
        for j in range(t):
            fl.timing()
        pickle.dump(fl,f)
    f.close()


def append():
    f=open("flight.dat","ab")

    n=input("Enter the no. of flight plans:-")
    fl=flight_detail()
    for i in range(n):
        fl.storedata()
        t=input('Enter no. flight times for this day--')
        for j in range(t):
            fl.timing()
        pickle.dump(fl,f)
    f.close()


def insert():
    f1=open("flight.dat","rb")
    f2=open("new_flight.dat","wb")

    fl1=flight_detail()
    fl1.storedata()
    end=0
    try:
        while True:
            fl= pickle.load(f1)
            if fl.flight_num<=fl1.flight_num:
                pickle.dump(fl,f2)
            else :
                end=1
                break
        pickle.dump(fl1,f2)
        f1.seek(0)
        while True:
            fl= pickle.load(f1)
            if fl.flight_num>fl1.flight_num:
                pickle.dump(fl,f2)

    except EOFError:
        if end==0:
            pickle.dump(fl1,f2)
        f1.close()
        f2.close()

    os.remove("flight.dat")
    os.rename("new_flight.dat","flight.dat")


def delete():
    flight_num=raw_input("Enter the flight id(num) of the flight whose details are  to be deleted: ")

    f1=open("flight.dat","rb")
    f2=open("new_flight.dat","wb")
    status=0

    try:
        while True:
            fl= pickle.load(f1)
            if fl.flight_num!=flight_num:
                pickle.dump(fl,f2)
            else :
                status=1

    except EOFError:
        f1.close()
        f2.close()
    os.remove("flight.dat")
    os.rename("new_flight.dat","flight.dat")
    if status==1:
        print 'record deleted'
    else:
        print 'record not found'


def modify():
    flight_num=input("Enter the flight id  whose details are to be modified : ")

    f1=open("flight.dat","rb")
    f2=open("new_flight.dat","wb")
    fl=flight_detail()
    status=0

    try:
        while True:
            fl= pickle.load(f1)
            if fl.flight_num==flight_num:
                status=1
                fl.storedata()
            pickle.dump(fl,f2)
    except EOFError:
        f1.close()
        f2.close()

    os.remove("flight.dat")
    os.rename("new_flight.dat","flight.dat")
    if status ==1:
        print 'file modified'
    else:
        print 'record not found '


def search():
    flight_num=raw_input("Enter the flight num of the flight to be searched :")

    f1=open("flight.dat","rb")
    status=0

    try:
        while True:
            fl= pickle.load(f1)
            if fl.flight_num==flight_num:
                status=1
                print 'FLIGHT NO.-', fl.flight_num
                print 'FROM-', fl.origin_name
                print 'TO- ', fl.dest_name
                print 'DATE-', fl.date
                print 'TIME OF DEPARTURE- ', fl.time_depart
                print 'TIME OF ARRIVAL-', fl.time_arrive

    except EOFError:
        f1.close()
    if status==0:
        print 'record not found'


def display_flights():
    print 'FLIGHT NO.  FROM     TO     DATE           DEPART   ARRIVE   FIRST       $$      BUSINESS        $$      ECONOMY    $$'
    print '                                           TIME     TIME     CLASS               CLASS                   CLASS        '
    fl=flight_detail()

    f=open("flight.dat","rb")

    try:
        while True:
            fl= pickle.load(f)
            fl.display()
    except EOFError:
        f.close()


#ADMIN CONTROL FUNCTIONS END///------------------------------------------------------////------------------

#|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
#USER CONTROL FUCTIONS START////-----------------------------------------------------/////--------------------


def search_flight(o,d):
    f1=open("flight.dat","rb")
    status=0

    try:
        while True:
            fl= pickle.load(f1)
            if fl.origin_name==o and fl.dest_name==d:
                status=1
                print 'FLIGHT NO.  FROM    TO       DATE      DEPART TIME  ARRIVE TIME  FIRSTCLS  $$  BUSINESSCLS  $$  ECONOMYCLS  $$'
                print fl.flight_num,'     ',fl.origin_name,'     ',fl.dest_name,'   ',fl.date,'      ',fl.time_depart,'   ',fl.time_arrive,'      ',fl.firstclass,'  ',fl.fir_price, '    ',fl.businessclass,'    ',fl.bus_price,'  ',fl.economyclass,'      1',fl.eco_price
                flightnum=fl.flight_num
                return flightnum




    except EOFError:
        f1.close()
    if status==0:
        print 'SORRY!! NO FLIGHTS AVAILABLE!! PLEASE CHECK AGAIN...'


def book_flight():
    flightnum=''
    origin=raw_input('FROM? - ')
    dest=raw_input('TO? - ')
    search_flight(origin,dest)

    ch=raw_input('BOOK FLIGHT!!??(Y/N)--')
    if  ch=='Y':
        print 'STEP 1 : PASSENGER DETAILS____________'
        create_passenger(flightnum)
                                                    #includes book update
        print 'YOUR FLIGHT HAS BEEN BOOKED!!!'
        print 'DO NOT FORGET TO KEEP YOUR TRANACTION CODE IN A SAFE PLACE!!'
        print
        print'>>>>>FLIGHT TICKET>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'
        #p=passenger()
        #p.display()

def loading_screen():
    import time
    import sys

    toolbar_width =50
    load=0

    print 'Intializing'
    # setup toolbar
    sys.stdout.write("[%s]" % ("" * toolbar_width))
    sys.stdout.flush()
    sys.stdout.write("\b" * (load+1)) # return to start of line, after '['

    for i in xrange(toolbar_width):
        time.sleep(0.12) # do real work here
        # update the bar
        sys.stdout.write(".")
        sys.stdout.flush()

    sys.stdout.write("\n")


   



def welcome():
    
    pic=r'''
   _____          __  __  _____  __      _____    ___  
  / ____|   /\   |  \/  |/ ____| \ \    / /__ \  / _ \ 
 | |  __   /  \  | \  / | (___    \ \  / /   ) || | | |
 | | |_ | / /\ \ | |\/| |\___ \    \ \/ /   / / | | | |
 | |__| |/ ____ \| |  | |____) |    \  /   / /_ | |_| |
  \_____/_/    \_\_|  |_|_____/      \/   |____(_)___/ 
                                                       
                                                       '''
    print '                        ',pic ,'                            '
    print '............................................WELCOME.........................................'
    print 'G.A.M.S (Global Airline Management Systems Ltd.) V2.0.....'
    loading_screen()
    
    print
    print 'LOGIN>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'
    print '1--AS USER'
    print '2--AS ADMINISTRATOR'
    ch=input('Enter your choice:-')
    if ch==1:
        print 'A---REGISTER (NEW USER)'
        print 'B--SIGN IN (EXISTING USER)'
        ch1=raw_input('Enter your choice--')
        if ch1.upper()=='A':
            register()
            print '\n\n\n\n\n\n\n'
            print '||||||||||||||||||||||||||||||||------ LOG IN ------|||||||||||||||||||||||||||||||||||||'
            print
            ul=user_login()
            ul.storedata()
        elif ch1.upper()=='B':
            ul=user_login()
            ul.storedata()

        else:
            print 'WRONG OPTION'
            welcome()
    elif ch==2:
        al=admin_login()
        al.storedata()

    else:
        print 'WRONG OPTION'
        welcome()


def admin_main_menu():
    print

    print 'ADMINISTRATOR FUNCTIONS.......'
    while True:
        print
        print '0-Create new file'
        print '1-append file'
        print '2-insert a record'
        print '3-delete a record'
        print '4-modify  record'
        print '5-display flight details'
        print '6-search record'
        print '7-exit\n\n'
        print

        ch = input('Enter your choice:')

        if ch==0:
            create_flight()
        elif ch==1:
            append()
        elif ch==2:
            insert()
        elif ch==3:
            delete()
        elif ch==4:
            modify()
        elif ch==5:
            display_flights()
        elif ch==6:
            search()
        elif ch==7:
            exit()
        else:
            print' Wrong choice entered'

def user_main_menu():
    print 'WHAT WOULD YOU LIKE TO DO??'
    while True:
        print
        print'                          MENU                                    '
        print '1-Display all flights'
        print '2-Book flight'
        print '3-Cancel flight'
        print '4-Search for flight plan based on origin and dest'

        print '5-exit\n\n'

        ch = input('Enter your choice :')

        if ch==1:
            display_flights()
        elif ch==2:
            book_flight()
        elif ch==3:
            cancel_flight()
        elif ch==4:
            search_flight()

        elif ch==5:
            exit()
        else:
            print' Wrong choice entered'



# C    O     R      E..........................
def main():
    welcome()


main()


    #TO BE CONTINUED...........
     
                                   
                                   



    
